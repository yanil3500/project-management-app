import java.awt.*;
import javax.swing.*;
import java.io.Serializable;


/**
 * NOTE about Serializable: This class implements Serializable so that these types of objects can be converted into a byte stream
 * and saved onto disk.
 */
public class Panel extends JLabel implements Drawable, Serializable {
    private Task task;
    private int xPos;
    private int yPos;
    private int width;
    private int height;

    public Panel(Task task) {
        this.task = task;
    }

    public void updatePosition(int x, int y, int initWidth, int initHeight) {
	xPos = x;
	yPos = y;
	width = initWidth;
	height = initHeight;
	this.setLocation(xPos, yPos);
	this.setSize(width, height);
    }

    @Override
    public void draw(Graphics g) {

	g.setColor(Color.LIGHT_GRAY);
	g.fillRect(xPos, yPos, width, height);
	String title = task.getTitle();
	String author = task.getAuthor();
	String description = task.getDescription();
	
	g.setColor(Color.BLACK);
	Font font = new Font("TimesRoman", Font.PLAIN, 12);
	int rise = g.getFontMetrics(font).getAscent();
	g.setFont(font);
	if (title != null) {
	    g.drawString(title, xPos + 5, yPos + 5 + rise);
	}
	if (author != null) {
	    g.drawString(author, xPos + 5, yPos + 10 + 2*rise);
	}
	if (description != null) {
	    g.drawString(description, xPos + 5, yPos + 15 + 3*rise);
	}
    }

    /**
     * NOTE: the equals method was generated by the IntelliJ IDE.
     * Compares this panel to the specified object. The result is true if and only if
     * the argument is not null, is a Panel instance, and the specified object represents this panel.
     *
     * @param o
     * @return
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Panel panel = (Panel) o;

        return task != null ? task.equals(panel.task) : panel.task == null;
    }

    /**
     * Gets the task associated with this panel.
     *
     * @return a Task.
     */
    public Task getTask() {
        return this.task;
    }

}
