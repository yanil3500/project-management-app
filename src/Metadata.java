import java.io.Serializable;
import java.util.*;

/**
 * NOTE about Serializable: This class implements Serializable so that these types of objects can be converted into a byte stream
 * and saved onto disk.
 */
class Metadata implements Serializable {

    /**
     * The date the Task was created.
     */
    private Date dateCreated;

    /**
     * The date for the last time the Task was updated.
     */
    private Date lastModified;

    //Here is the Stackoverflow question that was looked at for how to use the Calendar class.
    //Link: https://stackoverflow.com/questions/5165428/how-to-set-time-to-a-date-object-in-java
    public Metadata() {
        this.dateCreated = Calendar.getInstance().getTime();
        this.lastModified = Calendar.getInstance().getTime();
    }

    //Copy constructor
    public Metadata(Metadata metadata) {
        this.dateCreated = metadata.getDateCreated();
        this.lastModified = metadata.getLastModified();
    }


    /**
     * Gets the date the Task was created.
     *
     * @return a Date.
     */
    public Date getDateCreated() {
        return new Date(dateCreated.getTime());
    }

    /**
     * Gets the date for the last time the Task was updated.
     *
     * @return a Date.
     */
    public Date getLastModified() {
        return new Date(lastModified.getTime());
    }

    /**
     * Updates lastModified to indicate the state of the Task has changed.
     */
    public void updateLastModified() {
        this.lastModified = new Date(System.nanoTime());
    }

    /**
     * NOTE: the equals method was generated by the IntelliJ IDE.
     * Compares this metadata object to the specified object. The result is true if and only if
     * the argument is not null, is a Metadata instance, and the specified object represents this metadata object.
     *
     * @param o
     * @return
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Metadata metadata = (Metadata) o;

        if (!getDateCreated().equals(metadata.getDateCreated())) return false;
        return getLastModified().equals(metadata.getLastModified());
    }

    /**
     * NOTE: the hashCode method was generated by the IntelliJ IDE.
     * Returns a hash code for this metadata object.
     *
     * @return
     */
    @Override
    public int hashCode() {
        int result = getDateCreated().hashCode();
        result = 31 * result + getLastModified().hashCode();
        return result;
    }
}
